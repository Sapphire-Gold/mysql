=>VARIABLE

 =>@@ - System Variable
 NOTE:: @@ is used for system variables prefix. Global value of the system variable.


 =>@ - User Defined Variable
 NOTE:: while @ is used for user defined variables;


=>What is a VARIABLE ?
*value assign
*value can change or overwrite


Use for VARIABLE
counter in looping
save value
use in conditional logic

=>Local Variables

_______________________________________________

SHOW VARIABLES;

=>@ - USER DEFINED VARIABLES

Method 1 (Using SELECT)
-----------------------

SELECT @myfirstvar := 'Hello Myanmar';

SELECT @myfirstvar;

*can overwrite
SELECT @myfirstvar := 'Save Myanmar';

SELECT @myfirstvar;


Method 2 (Using SET)
--------------------

SET @mysecondvar = 'Data Land';

SELECT @mysecondname;

*overwrite
SELECT @mysecondvar = "Tin Htut Aung";

SELECT @mysecondname;



SELECT @num1 := 10;
SELECT @num2 := 20;
SELECT @num1;
SELECT @num2;
SELECT @num1 + @num2;

SELECT @num3 := 10;
SELECT @num4 := 20;
SELECT @num3;
SELECT @num4;
SELECT @num3 + @num4;

SELECT @num1 := "30";
SELECT @num2 := "40";
SELECT @num1;
SELECT @num2;
result = 70 (not concat)
SELECT @num1 + @num2;

SELECT @num1,@num2,@num3,@num4;

SELECT @num1 AS numberone,@num2 AS numbertwo;
SELECT @num1 AS numberone,@num2 AS numbertwo,@num3,@num4;
SELECT @num1 AS numberone,@num2 AS numbertwo,@num3+@num4;
SELECT @num1 AS numberone,@num2 AS numbertwo,@num5 := @num3+@num4;
SELECT @num1 AS numberone,@num2 AS numbertwo,@num5 :=@num3+@num4 AS number5;


SELECT * FROM employees;

SELECT name,age,salary,city FROM employees
WHERE age > 20;

SELECT @num2 := 20;

SELECT name,age,salary,city FROM employees
WHERE age > @num2;

SET @90k = 90000;
SELECT @90k;

SELECT name,age,salary,city FROM employees
WHERE salary > @90k;

_______________________________________________


=>WARNING

*Show Warning Count

SHOW COUNT(*) WARNINGS;
SELECT @@warning_count;

*Show Warnings;
SHOW WARNINGS;
SHOW WARNINGS LIMIT 3;
SHOW WARNINGS\G;  (show warning in vertical)
SHOW WARNINGS \G; 


help;
Note: \G modifier  (ego        (\G) Send command to mysql server, display result vertically.)

SELECT * FROM tablename\G;
SELECT * FROM tablename \G;

\W;
\w;

Note:  \W modifier ( (\W) Show warnings after every statement.). mysql > help;
Note:  \w modifier ((\w) Don't show warnings after every statement). mysql > help;



Eg. SELECT 1/0;


=>ERROR
*Show Errors Count
SHOW COUNT(*) ERRORS;
SELECT @@error_count;

*Show Errors
SHOW ERRORS;
SHOW ERRORS\G;

Eg. DROP TABLE abc ; / SELECT myfun();



=>Change Error COunt Setting;
SHOW VARIABLES LIKE 'max_error_count';
SET max_error_count=1024;

______________________________________________
help;

=>Important SELECT Queries
=>Check User
status;
SELECT USER();
SELECT USER() AS 'ko ko';


__________________________________________

=>Get Mysql timezone

SHOW VARIABLES LIKE "%time_zone%";
SELECT @@time_zone;
SELECT @@global.time_zone,@@session.time_zone;

=>Change Mysql timezone
SET time_zone = "+07:00";
SET GLOBAL time_zone = "+07:00"; 
SET @@global.time_zone = "+06:30";

________________________________

=>Local Variables

DELIMITER //

    CREATE PROCEDURE procname_proc()
    BEGIN

        DECLARE x INT;
        DECLARE y INT;
        DECLARE z INT;

        SET x := 100;
        SET y := 200;
        SET z := x + y;

        SELECT x,y,z;


    END; //

DELIMITER ;


CALL procname_proc();


SHOW PROCEDURE STATUS WHERE DB = 'kotha007';








