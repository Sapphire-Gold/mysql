=>Function

(i) PROCEDURE (stored procedure)
    (a) IN = Input Parameter
    (b) OUT = Output Parameter
    (c) INOUT = Inout Parameter
    
(ii) FUNCTION
          (a)Default Functions (Build in) *COUNT
          (b)User Define Functions
                (i)IN = Input Parameters

__________________________________________________________________

FUNCTION (User Define Functions)

SELECT products.name,products.price,checkouts.qty,
(products.price * checkouts.qty) as totalamount
FROM checkouts
LEFT JOIN products
ON checkouts.product_id = products.id;


=Total Amount
SELECT SUM(products.price * checkouts.qty)
FROM checkouts
LEFT JOIN products
ON checkouts.product_id = products.id;


DELIMITER //

   CREATE FUNCTION totalamount_fun()
   RETURNS DECIMAL DETERMINISTIC
   BEGIN

      DECLARE totalamount DECIMAL;

      SELECT SUM(products.price * checkouts.qty)
      INTO totalamount
      FROM checkouts
      LEFT JOIN products
      ON checkouts.product_id = products.id;

      RETURN totalamount;

      END; //

      DELIMITER ;


      SELECT totalamount_fun();

      =>List all Functions
      SHOW FUNCTION STATUS WHERE DB = 'kotha007';

      =>Drop function
      DROP FUNCTION IF EXISTS totalamount_fun;

 _____________________________________________

 =>Input Parameter (Single Parameter)     

=Total Amount by Product ID
 SELECT SUM(products.price * checkouts.qty)
 FROM checkouts
 LEFT JOIN products
 ON checkouts.product_id = products.id
 WHERE products.id = 1;

  SELECT SUM(products.price * checkouts.qty)
 FROM checkouts
 LEFT JOIN products
 ON checkouts.product_id = products.id
 WHERE products.id = 1;


 DELIMITER $$

   
   CREATE FUNCTION totalamountbyproductid_fun(p_productid INT)
   RETURNS DECIMAL DETERMINISTIC
   BEGIN

      DECLARE totalamount DECIMAL;

      SELECT SUM(products.price * checkouts.qty)
      INTO totalamount
      FROM checkouts
      LEFT JOIN products
      ON checkouts.product_id = products.id
      WHERE products.id = p_productid ;
      RETURN totalamount;

      END; $$

      DELIMITER ;

      =>List all Functions
      SHOW FUNCTION STATUS WHERE DB = 'kotha007';
      

      SELECT totalamountbyproductid_fun(1);
      SELECT otatlamountbyproductid_fun(2);
      SELECT otatlamountbyproductid_fun(3);   // NULL


      DROP FUNCITON IF EXISTS totalaountbyproductid_fun;

      _____________________________

      =>Input Parameter (Multi Parameters)

      =Total Amount by Currency
       SELECT SUM(products.price * checkouts.qty)
      FROM checkouts
      LEFT JOIN products
      ON checkouts.product_id = products.id
      WHERE products.id = 1 AND checkouts.payment = 'visa';

       SELECT SUM(products.price * checkouts.qty)
      FROM checkouts
      LEFT JOIN products
      ON checkouts.product_id = products.id
      WHERE products.id = 1 AND checkouts.payment = 'visa';

      DELIMITER $$

   
   CREATE FUNCTION totalamountbycurrency_fun(p_productid INT,
   p_payment VARCHAR(4)
   )
   RETURNS DECIMAL DETERMINISTIC
   BEGIN
   DECLARE totalamount DECIMAL;
      SELECT SUM(products.price * checkouts.qty)
      INTO totalamount
      FROM checkouts
      LEFT JOIN products
      ON checkouts.product_id = products.id
      WHERE products.id = p_productid AND checkouts.payment = p_payment;
      RETURN totalamount;

      END; $$

      DELIMITER ;

      SELECT totalamountbycurrency_fun(1,'visa');
      SELECT totalamountbycurrency_fun(1,'MPU');
      SELECT totalamountbycurrency_fun(1,'COd');


      SELECT  totalamountbycurrency_fun(2,'visa');
      SELECT totalamountbycurrency_fun(2,'MPU');
      SELECT totalamountbycurrency_fun(2,'COd');
 
     *NULL
     SELECT totalamountbycurrency_fun(3,'visa');
     SELECT totalamountbycurrency_fun(3,'MPU');
     SELECT totalamountbycurrency_fun(3,'COd');

   SHOW FUNCITON STATUS WHERE DB = 'kotha007';
   

   _______________________________________________   





















